#!/usr/bin/env bats

load ~/.bash_functions

@test "contains_in_simple" {
    arr=(1 2 3 4 5)
    run contains_in 1 "${arr[@]}"
    [ "$status" == 0 ]
    [ -z "$output" ]
    run contains_in 6 "${arr[@]}"
    [ "$status" == 1 ]
    [ -z "$output" ]
}

@test "contains_in_complex" {
    arr=(abc "foo bar" baz)
    run contains_in abc "${arr[@]}"
    [ "$status" == 0 ]
    [ -z "$output" ]
    run contains_in "foo bar" "${arr[@]}"
    [ "$status" == 0 ]
    [ -z "$output" ]
    run contains_in baz "${arr[@]}"
    [ "$status" == 0 ]
    [ -z "$output" ]
    run contains_in foo "${arr[@]}"
    [ "$status" == 1 ]
    [ -z "$output" ]
    run contains_in bar "${arr[@]}"
    [ "$status" == 1 ]
    [ -z "$output" ]
}

@test "index_of_simple" {
    arr=(1 2 3 4 5)
    i=$(index_of 3 "${arr[@]}")
    [ $i == 2 ]

    i=$(index_of 1 "${arr[@]}")
    [ $i == 0 ]

    i=$(index_of 5 "${arr[@]}")
    [ $i == 4 ]

    run index_of 6 "${arr[@]}"
    [ $status == 1 ]
    [ $output == "-1" ]
}

@test "index_of_complex" {
    arr=(abc "foo bar" baz)
    i=$(index_of "foo bar" "${arr[@]}")
    [ $i == 1 ]

    run index_of foo "${arr[@]}"
    [ $status == 1 ]
    [ $output == "-1" ]

    run index_of bar "${arr[@]}"
    [ $status == 1 ]
    [ $output == "-1" ]
}

@test "insert" {
    arr=(1 2 3 4 5)

    insert "foo bar" 3 arr
    [ "${#arr[@]}" == 6 ]
    [ "${arr[3]}" == "foo bar" ]
}

@test "join_simple" {
    arr=(1 2 3 4 5)
    run join ", " "${arr[@]}"
    [ "$output" == "1, 2, 3, 4, 5" ]
}

@test "join_complex" {
    arr=(abc "foo bar" baz)
    run join ", " "${arr[@]}"
    [ "$output" == "abc, foo bar, baz" ]
}

@test "remove_index" {
    arr=(1 2 3 4 5)
    [ "${#arr[@]}" == 5 ]

    remove_index 2 arr

    [ "${#arr[@]}" == 4 ]
    ! contains_in 3 "${arr[@]}"
}

@test "remove_first" {
    arr=(1 2 3 4 5 3)
    [ "${#arr[@]}" == 6 ]
    [ "${arr[2]}" == 3 ]

    remove_first 3 arr

    [ "${#arr[@]}" == 5 ]
    [ "${arr[2]}" == 4 ]
    echo "${arr[@]}"
    run contains_in 3 "${arr[@]}"
    [ "$status" == 0 ]
}

@test "alias_append" {
    alias foo=bar
    alias_append foo --flag
    [ "${BASH_ALIASES[foo]}" == "bar --flag" ]
}

@test "packaged_installed" {
    run package_installed abc123
    [ "$status" != 0 ]
    run package_installed bash
    [ "$status" == 0 ]
}
